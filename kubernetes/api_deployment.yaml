apiVersion: apps/v1
kind: Deployment
metadata:
  name: stochss-compute
spec:
  selector:
    matchLabels:
      app: stochss-compute
  template:
    metadata:
      labels:
        app: stochss-compute
    spec:
      containers:
      - name: stochss-compute
        image: mdip226/stochss-compute:latest
        resources:
          limits:
            memory: "1G"
            cpu: "2"
          requests:
            memory: "500Mi"
            cpu: "1"
        env:
          - name: REDIS_ADDRESS
            value: "redis-service.default"
          - name: WORKER_SPEC_PATH
            value: "dask_worker_spec.yaml"
        ports:
        - containerPort: 1234
---
apiVersion: v1
kind: Service
metadata:
  name: stochss-compute-service
spec:
  selector:
    app: stochss-compute
  type: LoadBalancer
  ports:
  - protocol: 'TCP'
    port: 1234
    targetPort: 1234
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dask
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: daskKubernetes
rules:
- apiGroups:
  - ""  # indicates the core API group
  resources:
  - "pods"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "create"
  - "delete"
- apiGroups:
  - ""  # indicates the core API group
  resources:
  - "pods/log"
  verbs:
  - "get"
  - "list"
- apiGroups:
  - "" # indicates the core API group
  resources:
  - "services"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "create"
  - "delete"
- apiGroups:
  - "policy"  # indicates the policy API group
  resources:
  - "poddisruptionbudgets"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "create"
  - "delete"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dask-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: daskKubernetes
  apiGroup: rbac.authorization.k8s.io

